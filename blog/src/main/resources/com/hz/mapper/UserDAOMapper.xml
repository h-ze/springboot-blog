<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.blog.dao.UserDAO">

    <!--<resultMap id="User" type="com.hz.demo.entity.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="bir" property="bir" jdbcType="DATE" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="userId" property="userId" jdbcType="VARCHAR" />
    </resultMap>-->

    <insert id="save" parameterType="com.hz.blog.entity.User">
        INSERT INTO user VALUES (#{id},#{name},#{age},#{bir},#{password},#{salt},#{userId},#{status})
    </insert>

    <insert id="addUserRoles" parameterType="com.hz.blog.entity.UserRoles">
        INSERT INTO t_user_role VALUES (#{id},#{userId},#{roleId})
    </insert>

    <update id="updateUserRoles" parameterType="com.hz.blog.entity.UserRoles">
        update  t_user_role set roleid =#{roleId} where userid =#{userId}
    </update>

    <select id="findAll" resultType="com.hz.blog.entity.User">
        SELECT id,name,age,bir FROM user
    </select>

    <select id="getUser" parameterType="String" resultType="com.hz.blog.entity.User">
        SELECT id,name,age,bir,userId,password,salt FROM user WHERE
        <if test="email != '' and email!= null">
            name = #{email}
        </if>

    </select>

    <select id="getUserById" parameterType="String" resultType="com.hz.blog.entity.User">
        SELECT id,name,age,bir,password,salt,userId FROM user WHERE userId = #{userId}
    </select>

    <resultMap id="userMap" type="com.hz.blog.entity.User">
        <id column="uid" property="id"></id>
        <result column="name" property="name"></result>

        <collection property="roles" javaType="list" ofType="com.hz.blog.entity.Role">
            <id column="id" property="id"></id>
            <result column="rname" property="name"></result>
        </collection>
    </resultMap>
    <select id="findRolesByUsername" parameterType="String" resultMap="userMap">
        SELECT u.id uid,u.name,r.id,r.name rname FROM user u LEFT JOIN t_user_role ur ON u.userId =ur.userid
        LEFT JOIN t_role r
        ON ur.roleid =r.id
        WHERE u.name= #{username}
    </select>

    <delete id="deleteUserByOwner" parameterType="String">
        DELETE FROM user WHERE userId =#{userId} AND password =#{password}
    </delete>

    <delete id="deleteUser" parameterType="String">
        DELETE FROM user WHERE name =#{username}
    </delete>

    <update id="updateUser" parameterType="com.hz.blog.entity.User">
        UPDATE user SET password =#{password} WHERE userId =#{userId}
    </update>

    <select id="getUserWithInfo" resultType="com.hz.blog.entity.UserWithInfo">
        SELECT u.name,u.age,u.bir,u.userId,u.password,u.salt,u.status,u.id,ur.email,ur.full_name,ur.enterprise_id,ur.email,ur.phone_number FROM user u LEFT JOIN user_info ur ON u.userId =ur.userId
        <where>
            <if test="userId != '' and userId!= null">
                u.userId= #{userId}
            </if>

            <if test="username != '' and username!= null">
                and u.name= #{username}
            </if>
        </where>
    </select>
</mapper>