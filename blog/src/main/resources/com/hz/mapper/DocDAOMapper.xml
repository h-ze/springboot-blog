<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.blog.dao.DocDao">

<!--    <resultMap id="BaseResultMap" type="com.hz.blog.entity.Document">-->
<!--        <id column="id" property="id" jdbcType="BIGINT"/>-->
<!--        <result column="userid" property="userId" jdbcType="VARCHAR"/>-->
<!--        <result column="docid" property="docId" jdbcType="VARCHAR"/>-->
<!--        <result column="cappid" property="cAppId" jdbcType="VARCHAR"/>-->
<!--        <result column="cmisid" property="cmisId" jdbcType="VARCHAR"/>-->
<!--        <result column="docname" property="docName" jdbcType="VARCHAR"/>-->
<!--        <result column="createdate" property="createDate" jdbcType="DATE"/>-->
<!--        <result column="encryptconfig" property="encryptConfig" jdbcType="VARCHAR"/>-->
<!--    </resultMap>-->

    <insert id="addDoc" parameterType="com.hz.blog.entity.Document">
        insert into document values (null ,#{userId},#{docId},#{cAppId},#{cmisId},#{docName},#{createDate},#{encryptConfig})
    </insert>

    <insert id="addDocs" parameterType="java.util.List">
        insert into document values
        <foreach collection="documents" item="document" index="index" separator=",">
            (
            null ,#{document.userId},#{document.docId},#{document.cAppId},#{document.cmisId},
            #{document.docName},#{document.createDate},#{document.encryptConfig}
            )
        </foreach>
    </insert>

    <delete id="deleteDoc" parameterType="String">
        delete from document where docid=#{docId}
    </delete>

    <update id="updateDoc" parameterType="com.hz.blog.entity.Document">
        update document set docname =#{docName},encryptconfig=#{encryptConfig} where docid =#{docId}
    </update>

    <select id="getDoc" parameterType="String" resultType="com.hz.blog.entity.Document">
        select userid,docid,cappid,cmisid,docname,createdate,encryptconfig from document where docid=#{docId}
    </select>

    <select id="getDocs" parameterType="String" resultType="com.hz.blog.entity.Document">
        select userid,docid,cappid,cmisid,docname,createdate,encryptconfig from document where userid=#{userId}
    </select>

    <select id="getDocsPage" parameterType="String" resultType="com.hz.blog.entity.Document">
        select userid,docid,cappid,cmisid,docname,createdate,encryptconfig from document where userid =#{userId}
        order by createdate desc
    </select>
</mapper>